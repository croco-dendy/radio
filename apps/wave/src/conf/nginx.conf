worker_processes auto;

events {
    worker_connections 1024;
}

rtmp {
    server {
        listen 1935;
        chunk_size 16384;
        max_connections 200;

        out_queue 4096;
        out_cork 8;

        ping 30s;
        ping_timeout 15s;

        application live {
            live on;
            record off;

            # Tailscale access control - replace YOUR_TAILSCALE_IP with your actual IP
            # allow publish all;
            allow publish 127.0.0.1;
            allow publish 100.74.63.70;
            allow play all;

            hls on;
            hls_path /data/hls;
            hls_fragment 3s;
            hls_playlist_length 60s;
            hls_cleanup on;

            drop_idle_publisher 30s;
            sync 10ms;
        }
    }
}

http {
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    gzip on;
    gzip_types application/x-mpegurl text/plain application/json;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=hls:10m rate=30r/s;

    server {
        listen 8069;
        server_name _;

        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;

        location = /404.html {
            internal;
            return 404 "Not Found";
        }

        location = /50x.html {
            internal;
            return 500 "Internal Server Error";
        }

        location /hls/ {
            alias /data/hls/;

            # Apply rate limiting
            limit_req zone=hls burst=20 nodelay;

            # --- HLS плейлист (.m3u8) – завжди no-cache
            location ~* \.m3u8$ {
                add_header Cache-Control "no-cache, no-transform";
                add_header Access-Control-Allow-Origin "*";
                add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS";
                add_header Access-Control-Allow-Headers "Origin, Accept, Content-Type, Range";
                add_header Content-Type "application/x-mpegurl";

                # Fallback for missing playlist
                try_files $uri @fallback;
            }

            # --- HLS сегменти (.ts або .m4s) – кеш 300 с
            location ~* \.(ts|m4s)$ {
                add_header Cache-Control "public, max-age=300s, immutable, no-transform";
                add_header Access-Control-Allow-Origin "*";
                add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS";
                directio 512;

                # Fallback for missing segments
                try_files $uri @fallback;
            }

            # CORS pre-flight для JS-плеєра
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin "*";
                add_header Access-Control-Allow-Methods "GET, OPTIONS";
                add_header Access-Control-Allow-Headers "Origin, Accept, Content-Type";
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Length 0;
                return 204;
            }
        }

        # Fallback location for missing HLS files
        location @fallback {
            return 404 "Stream not available";
        }

        # ---- Static audio for CDN ----
        location /audio/ {
            alias /data/audio/;

            # Apply rate limiting
            limit_req zone=api burst=10 nodelay;

            add_header Cache-Control "public, max-age=31536000, immutable";
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS";
            add_header Accept-Ranges bytes; # перемотка

            # Security: only allow specific file types
            location ~* \.(mp3)$ {
                try_files $uri =404;
            }

            # Block access to other file types
            location ~* \.(php|pl|py|jsp|asp|sh|cgi)$ {
                deny all;
            }
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}
