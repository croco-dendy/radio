@use '../../styles' as *;
@use 'sass:map';

.container {
  position: relative;
  display: inline-block;

  &.small {
    width: 56px;
    height: 28px;
  }

  &.medium {
    width: 72px;
    height: 36px;
  }

  &.large {
    width: 88px;
    height: 44px;
  }

  &.disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }

  &:not(.disabled) {
    cursor: pointer;
  }
}

.input {
  display: none;
}

.base {
  @include base-layer;
}

.lampBase {
  @include lamp-base;

  .small & {
    inset: map.get($sizes, small, 'inset');
  }

  .medium & {
    inset: map.get($sizes, medium, 'inset');
  }

  .large & {
    inset: map.get($sizes, large, 'inset');
  }
}

.background {
  position: absolute;
  border-radius: $border-radius-full;
  transition: all 100ms ease-out;
  opacity: 0;
  @include frosted-inner;

  .small & {
    inset: map.get($sizes, small, 'inset');
  }

  .medium & {
    inset: map.get($sizes, medium, 'inset');
  }

  .large & {
    inset: map.get($sizes, large, 'inset');
  }

  &.green {
    @include apply-variant(green);
  }

  &.yellow {
    @include apply-variant(yellow);
  }

  &.gray {
    @include apply-variant(gray);
  }

  &.red {
    @include apply-variant(red);
  }
}

.toggle {
  position: absolute;
  transition: all 150ms ease-out;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: $border-radius-full;
  @include frosted-inner;

  .small & {
    inset: map.get($sizes, small, 'inset');
  }

  .medium & {
    inset: map.get($sizes, medium, 'inset');
  }

  .large & {
    inset: map.get($sizes, large, 'inset');
  }

  &.checked {
    margin-left: 8px;

    &.green {
      @include apply-variant(green);
    }

    &.yellow {
      @include apply-variant(yellow);
    }

    &.gray {
      @include apply-variant(gray);
    }

    &.red {
      @include apply-variant(red);
    }
  }

  &.unchecked {
    margin-right: 8px;
    @include apply-variant(disabled);
  }
}

.labels {
  position: absolute;
  display: flex;
  align-items: center;
  justify-content: space-between;
  pointer-events: none;
  border-radius: $border-radius-full;

  .small & {
    inset: map.get($sizes, small, 'inset');
    margin: 0 4px;
    padding: 0 5px;
  }

  .medium & {
    inset: map.get($sizes, medium, 'inset');
    margin: 0 4px;
    padding: 0 6px;
  }

  .large & {
    inset: map.get($sizes, large, 'inset');
    margin: 0 5px;
    padding: 0 8px;
  }
}

.label {
  font-weight: 600;
  color: rgba(255, 255, 255, 0.68);
  transition: opacity 150ms ease-out, transform 150ms ease-out;
  letter-spacing: 0.5px;
  opacity: 1;
  transform: translateX(0);

  .small & {
    font-size: 9px;
  }

  .medium & {
    font-size: 12px;
  }

  .large & {
    font-size: 16px;
  }

  &.off {
    &.checked {
      transform: translateX(2px);
      scale: 1.1;
      opacity: 0.2;
    }
  }

  &.on {
    &.unchecked {
      transform: translateX(-2px);
      scale: 1.1;
      opacity: 0.2;
    }
  }
}

.divider {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 1px;
  height: 60%;
  transform: translate(-50%, -50%);
  background-color: rgba(255, 255, 255, 0.15);
  border-radius: 2px;
  pointer-events: none;
}

.checked .background {
  opacity: 0.6;
}

.checked .toggle {
  &.green:hover {
    box-shadow: $shadow-frosted-inner, 0 0 10px 2px rgba(71, 245, 125, 0.4),
      0 0 20px 0px rgba(71, 245, 125, 0.6);
  }

  &.yellow:hover {
    box-shadow: $shadow-frosted-inner, 0 0 10px 2px rgba(254, 182, 28, 0.4),
      0 0 20px 0px rgba(254, 182, 28, 0.6);
  }

  &.gray:hover {
    box-shadow: $shadow-frosted-inner, 0 0 10px 2px rgba(242, 242, 242, 0.4),
      0 0 20px 0px rgba(242, 242, 242, 0.6);
  }

  &.red:hover {
    box-shadow: $shadow-frosted-inner, 0 0 10px 2px rgba(255, 80, 80, 0.4),
      0 0 20px 0px rgba(255, 80, 80, 0.6);
  }
}




